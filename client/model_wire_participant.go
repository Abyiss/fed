/*
FED API

FED API is designed to create FEDACH and FEDWIRE dictionaries.  The FEDACH dictionary contains receiving depository financial institutions (RDFI’s) which are qualified to receive ACH entries.  The FEDWIRE dictionary contains receiving depository financial institutions (RDFI’s) which are qualified to receive WIRE entries.  This project implements a modern REST HTTP API for FEDACH Dictionary and FEDWIRE Dictionary.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WIREParticipant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WIREParticipant{}

// WIREParticipant WIREParticipant holds a FedWIRE dir routing record as defined by Fed WIRE Format.  https://frbservices.org/EPaymentsDirectory/fedwireFormat.html
type WIREParticipant struct {
	// The institution's routing number
	RoutingNumber *string `json:"routingNumber,omitempty"`
	// Short name of financial institution
	TelegraphicName *string `json:"telegraphicName,omitempty"`
	// Financial Institution Name
	CustomerName *string       `json:"customerName,omitempty"`
	WireLocation *WIRELocation `json:"wireLocation,omitempty"`
	// Designates funds transfer status  * `Y` - Eligible * `N` - Ineligible
	FundsTransferStatus *string `json:"fundsTransferStatus,omitempty"`
	// Designates funds settlement only status   * `S` - Settlement-Only
	FundsSettlementOnlyStatus *string `json:"fundsSettlementOnlyStatus,omitempty"`
	// Designates book entry securities transfer status  * `Y` - Eligible * `N` - Ineligible
	BookEntrySecuritiesTransferStatus *string `json:"bookEntrySecuritiesTransferStatus,omitempty"`
	// Date of last revision  * YYYYMMDD * Blank
	Date *string `json:"date,omitempty"`
	// Normalized name of Wire participant
	CleanName *string `json:"cleanName,omitempty"`
	Logo      *Logo   `json:"logo,omitempty"`
}

// NewWIREParticipant instantiates a new WIREParticipant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWIREParticipant() *WIREParticipant {
	this := WIREParticipant{}
	return &this
}

// NewWIREParticipantWithDefaults instantiates a new WIREParticipant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWIREParticipantWithDefaults() *WIREParticipant {
	this := WIREParticipant{}
	return &this
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise.
func (o *WIREParticipant) GetRoutingNumber() string {
	if o == nil || IsNil(o.RoutingNumber) {
		var ret string
		return ret
	}
	return *o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingNumber) {
		return nil, false
	}
	return o.RoutingNumber, true
}

// HasRoutingNumber returns a boolean if a field has been set.
func (o *WIREParticipant) HasRoutingNumber() bool {
	if o != nil && !IsNil(o.RoutingNumber) {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given string and assigns it to the RoutingNumber field.
func (o *WIREParticipant) SetRoutingNumber(v string) {
	o.RoutingNumber = &v
}

// GetTelegraphicName returns the TelegraphicName field value if set, zero value otherwise.
func (o *WIREParticipant) GetTelegraphicName() string {
	if o == nil || IsNil(o.TelegraphicName) {
		var ret string
		return ret
	}
	return *o.TelegraphicName
}

// GetTelegraphicNameOk returns a tuple with the TelegraphicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetTelegraphicNameOk() (*string, bool) {
	if o == nil || IsNil(o.TelegraphicName) {
		return nil, false
	}
	return o.TelegraphicName, true
}

// HasTelegraphicName returns a boolean if a field has been set.
func (o *WIREParticipant) HasTelegraphicName() bool {
	if o != nil && !IsNil(o.TelegraphicName) {
		return true
	}

	return false
}

// SetTelegraphicName gets a reference to the given string and assigns it to the TelegraphicName field.
func (o *WIREParticipant) SetTelegraphicName(v string) {
	o.TelegraphicName = &v
}

// GetCustomerName returns the CustomerName field value if set, zero value otherwise.
func (o *WIREParticipant) GetCustomerName() string {
	if o == nil || IsNil(o.CustomerName) {
		var ret string
		return ret
	}
	return *o.CustomerName
}

// GetCustomerNameOk returns a tuple with the CustomerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetCustomerNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerName) {
		return nil, false
	}
	return o.CustomerName, true
}

// HasCustomerName returns a boolean if a field has been set.
func (o *WIREParticipant) HasCustomerName() bool {
	if o != nil && !IsNil(o.CustomerName) {
		return true
	}

	return false
}

// SetCustomerName gets a reference to the given string and assigns it to the CustomerName field.
func (o *WIREParticipant) SetCustomerName(v string) {
	o.CustomerName = &v
}

// GetWireLocation returns the WireLocation field value if set, zero value otherwise.
func (o *WIREParticipant) GetWireLocation() WIRELocation {
	if o == nil || IsNil(o.WireLocation) {
		var ret WIRELocation
		return ret
	}
	return *o.WireLocation
}

// GetWireLocationOk returns a tuple with the WireLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetWireLocationOk() (*WIRELocation, bool) {
	if o == nil || IsNil(o.WireLocation) {
		return nil, false
	}
	return o.WireLocation, true
}

// HasWireLocation returns a boolean if a field has been set.
func (o *WIREParticipant) HasWireLocation() bool {
	if o != nil && !IsNil(o.WireLocation) {
		return true
	}

	return false
}

// SetWireLocation gets a reference to the given WIRELocation and assigns it to the WireLocation field.
func (o *WIREParticipant) SetWireLocation(v WIRELocation) {
	o.WireLocation = &v
}

// GetFundsTransferStatus returns the FundsTransferStatus field value if set, zero value otherwise.
func (o *WIREParticipant) GetFundsTransferStatus() string {
	if o == nil || IsNil(o.FundsTransferStatus) {
		var ret string
		return ret
	}
	return *o.FundsTransferStatus
}

// GetFundsTransferStatusOk returns a tuple with the FundsTransferStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetFundsTransferStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FundsTransferStatus) {
		return nil, false
	}
	return o.FundsTransferStatus, true
}

// HasFundsTransferStatus returns a boolean if a field has been set.
func (o *WIREParticipant) HasFundsTransferStatus() bool {
	if o != nil && !IsNil(o.FundsTransferStatus) {
		return true
	}

	return false
}

// SetFundsTransferStatus gets a reference to the given string and assigns it to the FundsTransferStatus field.
func (o *WIREParticipant) SetFundsTransferStatus(v string) {
	o.FundsTransferStatus = &v
}

// GetFundsSettlementOnlyStatus returns the FundsSettlementOnlyStatus field value if set, zero value otherwise.
func (o *WIREParticipant) GetFundsSettlementOnlyStatus() string {
	if o == nil || IsNil(o.FundsSettlementOnlyStatus) {
		var ret string
		return ret
	}
	return *o.FundsSettlementOnlyStatus
}

// GetFundsSettlementOnlyStatusOk returns a tuple with the FundsSettlementOnlyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetFundsSettlementOnlyStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FundsSettlementOnlyStatus) {
		return nil, false
	}
	return o.FundsSettlementOnlyStatus, true
}

// HasFundsSettlementOnlyStatus returns a boolean if a field has been set.
func (o *WIREParticipant) HasFundsSettlementOnlyStatus() bool {
	if o != nil && !IsNil(o.FundsSettlementOnlyStatus) {
		return true
	}

	return false
}

// SetFundsSettlementOnlyStatus gets a reference to the given string and assigns it to the FundsSettlementOnlyStatus field.
func (o *WIREParticipant) SetFundsSettlementOnlyStatus(v string) {
	o.FundsSettlementOnlyStatus = &v
}

// GetBookEntrySecuritiesTransferStatus returns the BookEntrySecuritiesTransferStatus field value if set, zero value otherwise.
func (o *WIREParticipant) GetBookEntrySecuritiesTransferStatus() string {
	if o == nil || IsNil(o.BookEntrySecuritiesTransferStatus) {
		var ret string
		return ret
	}
	return *o.BookEntrySecuritiesTransferStatus
}

// GetBookEntrySecuritiesTransferStatusOk returns a tuple with the BookEntrySecuritiesTransferStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetBookEntrySecuritiesTransferStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BookEntrySecuritiesTransferStatus) {
		return nil, false
	}
	return o.BookEntrySecuritiesTransferStatus, true
}

// HasBookEntrySecuritiesTransferStatus returns a boolean if a field has been set.
func (o *WIREParticipant) HasBookEntrySecuritiesTransferStatus() bool {
	if o != nil && !IsNil(o.BookEntrySecuritiesTransferStatus) {
		return true
	}

	return false
}

// SetBookEntrySecuritiesTransferStatus gets a reference to the given string and assigns it to the BookEntrySecuritiesTransferStatus field.
func (o *WIREParticipant) SetBookEntrySecuritiesTransferStatus(v string) {
	o.BookEntrySecuritiesTransferStatus = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *WIREParticipant) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *WIREParticipant) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *WIREParticipant) SetDate(v string) {
	o.Date = &v
}

// GetCleanName returns the CleanName field value if set, zero value otherwise.
func (o *WIREParticipant) GetCleanName() string {
	if o == nil || IsNil(o.CleanName) {
		var ret string
		return ret
	}
	return *o.CleanName
}

// GetCleanNameOk returns a tuple with the CleanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetCleanNameOk() (*string, bool) {
	if o == nil || IsNil(o.CleanName) {
		return nil, false
	}
	return o.CleanName, true
}

// HasCleanName returns a boolean if a field has been set.
func (o *WIREParticipant) HasCleanName() bool {
	if o != nil && !IsNil(o.CleanName) {
		return true
	}

	return false
}

// SetCleanName gets a reference to the given string and assigns it to the CleanName field.
func (o *WIREParticipant) SetCleanName(v string) {
	o.CleanName = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *WIREParticipant) GetLogo() Logo {
	if o == nil || IsNil(o.Logo) {
		var ret Logo
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WIREParticipant) GetLogoOk() (*Logo, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *WIREParticipant) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given Logo and assigns it to the Logo field.
func (o *WIREParticipant) SetLogo(v Logo) {
	o.Logo = &v
}

func (o WIREParticipant) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WIREParticipant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoutingNumber) {
		toSerialize["routingNumber"] = o.RoutingNumber
	}
	if !IsNil(o.TelegraphicName) {
		toSerialize["telegraphicName"] = o.TelegraphicName
	}
	if !IsNil(o.CustomerName) {
		toSerialize["customerName"] = o.CustomerName
	}
	if !IsNil(o.WireLocation) {
		toSerialize["wireLocation"] = o.WireLocation
	}
	if !IsNil(o.FundsTransferStatus) {
		toSerialize["fundsTransferStatus"] = o.FundsTransferStatus
	}
	if !IsNil(o.FundsSettlementOnlyStatus) {
		toSerialize["fundsSettlementOnlyStatus"] = o.FundsSettlementOnlyStatus
	}
	if !IsNil(o.BookEntrySecuritiesTransferStatus) {
		toSerialize["bookEntrySecuritiesTransferStatus"] = o.BookEntrySecuritiesTransferStatus
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.CleanName) {
		toSerialize["cleanName"] = o.CleanName
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	return toSerialize, nil
}

type NullableWIREParticipant struct {
	value *WIREParticipant
	isSet bool
}

func (v NullableWIREParticipant) Get() *WIREParticipant {
	return v.value
}

func (v *NullableWIREParticipant) Set(val *WIREParticipant) {
	v.value = val
	v.isSet = true
}

func (v NullableWIREParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableWIREParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWIREParticipant(val *WIREParticipant) *NullableWIREParticipant {
	return &NullableWIREParticipant{value: val, isSet: true}
}

func (v NullableWIREParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWIREParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
